@page "/ReportViewer"
@inherits LayoutComponentBase

@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components
@using AdminDiplomacyAPP.Data

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

@layout LoginLayout

<head>
    <link href="https://cdn.boldreports.com/3.2.27/content/material/bold.reports.all.min.css" rel="stylesheet" />
    <link href="https://cdn.boldreports.com/3.2.27/content/bold.widgets.core.compatibility.min.css" rel="stylesheet" />
    <link href="https://cdn.boldreports.com/3.2.27/content/material/bold.theme.compatibility.min.css" rel="stylesheet" />
</head>
<div id="report-viewer" style="width: 100%;height: 950px"></div>

@code {
    ReportViewerOptions viewerOptions = new ReportViewerOptions();
    string ID, category = "", ReportName;
    int BranchID, user;

    protected override async Task OnInitializedAsync()
    {
        BranchID = await sessionStorage.GetItemAsync<int>("BranchID");
        user = await sessionStorage.GetItemAsync<int>("LocalSessionUserId");
        category = await sessionStorage.GetItemAsync<string>("Category");

        if (user != 0)
        {
            var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
            var queryStrings = QueryHelpers.ParseQuery(uri.Query);
            if (queryStrings.TryGetValue("ID", out var _ID))
            {
                ID = _ID;
            }
            if (queryStrings.TryGetValue("ReportName", out var _ReportName))
            {
                ReportName = _ReportName;
            }
        }
        else
        {

            NavigationManager.NavigateTo("Login");
        }
        RenderReportViewer();
    }
    public async void RenderReportViewer()
    {
        viewerOptions.ReportName = ReportName;
        //for local
        viewerOptions.ServiceURL = "api/ReportViewer";

        List<JSReportParameter> Parameters = new List<JSReportParameter>
    {
            new JSReportParameter()
            {
                Name = "ID",
                Values = new List<string>(){ ID }
            }
        };
        viewerOptions.Parameters = Parameters;

        await JSRuntime.InvokeVoidAsync("BoldReports.RenderViewer", "report-viewer", viewerOptions);
    }

    // Initial rendering of Bold Report Viewer
    protected override void OnAfterRender(bool firstRender)
    {
        //RenderReportViewer();
    }
}
